diff --git "a/13.0.0/donkey/game_FinalEnd_Com.txt" "b/13.0.1/donkey/game_FinalEnd_Com.txt"
index 10b174c..e2d7aef 100644
--- "a/13.0.0/donkey/game_FinalEnd_Com.txt"
+++ "b/13.0.1/donkey/game_FinalEnd_Com.txt"
@@ -1,10 +1,10 @@
 if(is_excute){
 	CAM_ZOOM_OUT()
 }
 PostureModule::scale()
-if(0x11e080(1551145388, 1.4)){
+if(0x120890(298784397, 1.4)){
 	frame(Frame=7)
 	if(is_excute){
 		ATTACK(ID=0, Part=0, Bone=hash40("handl"), Damage=14.0, Angle=70, KBG=96, FKB=0, BKB=90, Size=12.0, X=2.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
 		ATTACK(ID=1, Part=0, Bone=hash40("arml"), Damage=14.0, Angle=70, KBG=96, FKB=0, BKB=90, Size=11.0, X=-2.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
 		ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=14.0, Angle=70, KBG=96, FKB=0, BKB=90, Size=13.0, X=0.0, Y=11.0, Z=5.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
@@ -21,11 +21,11 @@ if(0x11e080(1551145388, 1.4)){
 	}
 }
 frame(Frame=9)
 methodlib::L2CValue::operatorbool()const(is_excute)
 PostureModule::scale()
-if(0x11e080(0, 0.5)){
+if(0x120890(0, 0.5)){
 	frame(Frame=6)
 	if(is_excute){
 		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.0, Angle=3, KBG=100, FKB=0, BKB=0, Size=15.0, X=0.0, Y=10.0, Z=9.0, X2=0.0, Y2=10.0, Z2=11.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
 		methodlib::L2CValue::as_hash()const(0, hash40("top"), 50, 3, 1)
 		AttackModule::set_vec_target_pos()
@@ -73,21 +73,21 @@ else{
 WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
 if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
 	WorkModule::is_flag(FIGHTER_DONKEY_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT)
 	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
 		get_value_float(SO_VAR_FLOAT_LR)
-		if(0x11e080(1272456, 0)){
+		if(0x120890(1285780, 0)){
 			if(is_excute){
 				PostureModule::scale(1, 0)
-				0x11e080(0, 1.5)
+				0x120890(0, 1.5)
 				CAM_ZOOM_IN_arg5(0, 0)
 				camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, -20, 5)
 			}
 			else{
 				if(is_excute){
 					PostureModule::scale(1, 0)
-					0x11e080(0, 1.5)
+					0x120890(0, 1.5)
 					CAM_ZOOM_IN_arg5(0, 0)
 					camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 20, 5)
 				}
 			}
 		}
