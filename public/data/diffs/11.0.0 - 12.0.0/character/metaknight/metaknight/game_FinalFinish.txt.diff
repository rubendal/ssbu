diff --git "a/ght_11.0.0/metaknight/game_FinalFinish.txt" "b/ght_12.0.0/metaknight/game_FinalFinish.txt"
index 6120a49..33d1522 100644
--- "a/ght_11.0.0/metaknight/game_FinalFinish.txt"
+++ "b/ght_12.0.0/metaknight/game_FinalFinish.txt"
@@ -1,13 +1,13 @@
 if(is_excute){
 	WHOLE_HIT(HIT_STATUS_XLU)
 	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
 }
 WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
-if(0x12eaf0(false, false)){
+if(0x12eb70(false, false)){
 	get_value_float(SO_VAR_FLOAT_LR)
-	if(0x12eaf0(0, 0)){
+	if(0x12eb70(0, 0)){
 		if(is_excute){
 			CAM_ZOOM_IN_arg5(2, 0, 0.8, 0, 0)
 			camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 40, 0)
 		}
 		else{
@@ -25,13 +25,13 @@ if(is_excute){
 	ArticleModule::remove(FIGHTER_METAKNIGHT_GENERATE_ARTICLE_BUNSHIN)
 	WorkModule::on_flag(Flag=FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ENABLE_TRANS)
 }
 frame(Frame=5)
 WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
-if(0x12eaf0(false, false)){
+if(0x12eb70(false, false)){
 	get_value_float(SO_VAR_FLOAT_LR)
-	if(0x12eaf0(0, 0)){
+	if(0x12eb70(0, 0)){
 		if(is_excute){
 			REQ_FINAL_START_CAMERA(hash40("d04finalfinishl.nuanmb"), true)
 		}
 		else{
 			if(is_excute){
@@ -45,11 +45,11 @@ FT_MOTION_RATE(FSM=1)
 if(is_excute){
 	SET_RATE_ARTICLE(FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 1)
 }
 frame(Frame=50)
 get_value_float(SO_VAR_FLOAT_LR)
-if(0x12eaf0(0, 0)){
+if(0x12eb70(0, 0)){
 	if(is_excute){
 		ATTACK(ID=0, Part=2, Bone=hash40("top"), Damage=10.0, Angle=160, KBG=90, FKB=0, BKB=100, Size=30.0, X=0.0, Y=3.0, Z=-11.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=100.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_SPEED, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_NONE)
 		AttackModule::set_force_reaction(0, true, false)
 	}
 	else{
