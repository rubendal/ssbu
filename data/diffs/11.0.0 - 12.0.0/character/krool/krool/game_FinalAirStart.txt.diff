diff --git "a/1.0.0/krool/game_FinalAirStart.txt" "b/2.0.0/krool/game_FinalAirStart.txt"
index 73ff759..5f83c2b 100644
--- "a/1.0.0/krool/game_FinalAirStart.txt"
+++ "b/2.0.0/krool/game_FinalAirStart.txt"
@@ -1,9 +1,9 @@
 if(is_excute){
 	WHOLE_HIT(HIT_STATUS_XLU)
 	SLOW_OPPONENT(30, 60)
-	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
+	CHECK_VALID_FINAL_START_CAMERA(0, 7, 44, 0, 0, 0)
 }
 WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
 if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
 	frame(Frame=10)
 	if(is_excute){
@@ -13,11 +13,11 @@ if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
 	}
 	else{
 		if(is_excute){
 			camera(MA_MSC_CMD_CAMERA_CAM_RECT, 0, 4, 6, 0)
 			PostureModule::scale(4, 0)
-			0x1244a0(-616319011, 1.8)
+			0x124520(124495110, 1.8)
 			CAM_ZOOM_IN_arg5(-0.1, 0)
 			camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0)
 			FT_START_CUTIN()
 		}
 		frame(Frame=25)
@@ -30,13 +30,13 @@ frame(Frame=31)
 if(is_excute){
 	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=30, KBG=100, FKB=90, BKB=0, Size=8.0, X=0.0, Y=6.0, Z=13.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_FIGHTER, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 PostureModule::scale()
-0x1244a0(-616319011, 1.4)
+0x124520(124495110, 1.4)
 PostureModule::scale()
-if(0x1244a0(-616319011, 0.5)){
+if(0x124520(124495110, 0.5)){
 	if(is_excute){
 		methodlib::L2CValue::as_hash()const(0, hash40("top"), 60, 4, 1)
 		AttackModule::set_vec_target_pos()
 	}
 }
