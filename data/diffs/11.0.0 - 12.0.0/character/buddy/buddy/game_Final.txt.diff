diff --git "a/1.0.0/buddy/game_Final.txt" "b/2.0.0/buddy/game_Final.txt"
index 85d4b14..d8b2ae0 100644
--- "a/1.0.0/buddy/game_Final.txt"
+++ "b/2.0.0/buddy/game_Final.txt"
@@ -5,29 +5,29 @@ if(is_excute){
 	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
 	camera(MA_MSC_CMD_CAMERA_CAM_RECT, -5, -5, 15, -10)
 	SLOW_OPPONENT(15, 30)
 }
 WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
-if(0x18e1e0(false, false)){
+if(0x18cbc0(false, false)){
 	frame(Frame=5)
 	if(is_excute){
 		FT_SET_FINAL_FEAR_FACE(75)
 		REQ_FINAL_START_CAMERA_arg3(hash40("d04final.nuanmb"), false, false)
 		FT_START_CUTIN()
 		SlowModule::set_whole(2, 0)
 	}
 	else{
 		if(is_excute){
 			PostureModule::scale(4, 0)
-			0x18e1e0(0, 2.1)
+			0x18cbc0(0, 2.1)
 			CAM_ZOOM_IN_arg5(0, 0)
 			FT_START_CUTIN()
 		}
 	}
 }
 WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
-if(0x18e1e0(false, false)){
+if(0x18cbc0(false, false)){
 	frame(Frame=13)
 	if(is_excute){
 		SlowModule::clear_whole()
 		SlowModule::set_whole(4, 0)
 	}
@@ -47,216 +47,216 @@ if(is_excute){
 	QUAKE(CAMERA_QUAKE_KIND_L)
 }
 frame(Frame=31)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 13)
+	0x18cbc0(0, 13)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 9)
+	0x18cbc0(0, 9)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 18)
+	0x18cbc0(0, 18)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 8)
+	0x18cbc0(0, 8)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 4)
+	0x18cbc0(0, 4)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 4.5)
+	0x18cbc0(0, 4.5)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=32)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 13)
+	0x18cbc0(0, 13)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 9)
+	0x18cbc0(0, 9)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 30)
+	0x18cbc0(0, 30)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 8)
+	0x18cbc0(0, 8)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 4)
+	0x18cbc0(0, 4)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=33)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 11)
+	0x18cbc0(0, 11)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 35)
+	0x18cbc0(0, 35)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 8)
+	0x18cbc0(0, 8)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 4)
+	0x18cbc0(0, 4)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=34)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 11)
+	0x18cbc0(0, 11)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 35)
+	0x18cbc0(0, 35)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 8)
+	0x18cbc0(0, 8)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 4)
+	0x18cbc0(0, 4)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 20)
+	0x18cbc0(0, 20)
 	PostureModule::scale()
-	0x18e1e0(0, 10)
+	0x18cbc0(0, 10)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=35)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 11)
+	0x18cbc0(0, 11)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 40)
+	0x18cbc0(0, 40)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=36)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 11)
+	0x18cbc0(0, 11)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 45)
+	0x18cbc0(0, 45)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=37)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 11)
+	0x18cbc0(0, 11)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 45)
+	0x18cbc0(0, 45)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 frame(Frame=38)
 if(is_excute){
 	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
-	0x18e1e0(0, 15)
+	0x18cbc0(0, 15)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 11)
+	0x18cbc0(0, 11)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	PostureModule::scale()
-	0x18e1e0(0, 0)
+	0x18cbc0(0, 0)
 	PostureModule::scale()
-	0x18e1e0(0, 55)
+	0x18cbc0(0, 55)
 	PostureModule::scale()
-	0x18e1e0(0, 26)
+	0x18cbc0(0, 26)
 	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
 	AttackModule::set_no_dead_all(true, false)
 }
 wait(Frames=2)
 if(is_excute){
