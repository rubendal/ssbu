diff --git "a/2.0.0/demon/0x119c0b8904.txt" "b/3.0.0/demon/0x119c0b8904.txt"
index 093b3ae..2daf2c1 100644
--- "a/2.0.0/demon/0x119c0b8904.txt"
+++ "b/3.0.0/demon/0x119c0b8904.txt"
@@ -1,16 +1,16 @@
 is_vr_mode()
-if(0x3cfb50(false, false)){
+if(0x3cfb70(false, false)){
 	battle_object_module_accessor()
 	methodlib::L2CValue::L2CValue(void*)()
 }
 else{
 	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
 }
 methodlib::L2CValue::as_pointer()const()
 is_one_on_one_including_thrown()
-if(0x3cfb50(false, true)){
+if(0x3cfb70(false, true)){
 	if(is_excute){
 		battle_object_module_accessor()
 		methodlib::L2CValue::L2CValue(void*)()
 	}
 	else{
@@ -23,27 +23,27 @@ battle_object_module_accessor()
 methodlib::L2CValue::L2CValue(void*)()
 methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
 methodlib::L2CValue::as_pointer()const()
 check_disabled_motion_camera_of_stage()
 WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA)
-if(0x3cfb50(false, true)){
+if(0x3cfb70(false, true)){
 	if(is_excute){
 		CHECK_VALID_START_CAMERA(0, 7, 0, 50, 30, 0, true)
 	}
 }
 WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA)
-if(0x3cfb50(false, false)){
+if(0x3cfb70(false, false)){
 	WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
-	if(0x3cfb50(false, false)){
+	if(0x3cfb70(false, false)){
 		if(is_excute){
 			REQ_MOTION_CAMERA(0x163d9703b0, false)
 		}
 	}
 }
 if(is_excute){
 	PostureModule::scale(7, 0)
-	0x3cfb50(969459078, 1.5)
+	0x3cfb70(-155490015, 1.5)
 	CAM_ZOOM_IN_arg5(0, 0)
 }
 frame(Frame=10)
 if(is_excute){
 	REVERSE_LR()
@@ -64,11 +64,11 @@ if(is_excute){
 	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=13.0, Angle=19, KBG=50, FKB=0, BKB=45, Size=6.0, X=0.0, Y=7.5, Z=-14.0, X2=0.0, Y2=6.0, Z2=-14.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_DEMON_THROWCOMMAND, Type=ATTACK_REGION_KICK)
 	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=13.0, Angle=19, KBG=50, FKB=0, BKB=45, Size=4.0, X=0.0, Y=8.0, Z=-6.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_DEMON_THROWCOMMAND, Type=ATTACK_REGION_KICK)
 	AttackModule::set_catch_only_all(true, false)
 }
 WorkModule::is_flag(FIGHTER_DEMON_STATUS_THROW_COMMAND_FLAG_USE_OTHER_PARAM)
-if(0x3cfb50(false, false)){
+if(0x3cfb70(false, false)){
 	if(is_excute){
 		CHECK_FINISH_CAMERA(18, 2)
 	}
 	else{
 		if(is_excute){
